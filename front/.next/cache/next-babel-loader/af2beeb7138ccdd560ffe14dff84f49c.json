{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\nodebrid1\\\\front\\\\components\\\\PostCard.js\";\nimport { Button, Card, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport Proptypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id;\n  // = const id = me?.id; => optional chaining operation\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }, this),\n      actions: [\n      /*#__PURE__*/\n      //actionはArrayだからKeyが必要になる\n      _jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: [/*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\nPostCard.propTypes = {\n  post: Proptypes.shape({\n    id: Proptypes.number,\n    User: Proptypes.object,\n    content: Proptypes.string,\n    Images: Proptypes.arrayOf(Proptypes.object),\n    Comments: Proptypes.arrayOf(Proptypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","useSelector","Proptypes","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","post","me","state","user","id","children","cover","Images","PostImages","images","fileName","_jsxFileName","lineNumber","columnNumber","actions","content","Group","User","type","propTypes","shape","number","object","string","arrayOf","Comments","isRequired"],"sources":["E:/web/nodebrid1/front/components/PostCard.js"],"sourcesContent":["import { Button, Card, Popover } from \"antd\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n  // = const id = me?.id; => optional chaining operation\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images}></PostImages>}\r\n        actions={[\r\n          //actionはArrayだからKeyが必要になる\r\n          <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n          <HeartOutlined key=\"heart\"></HeartOutlined>,\r\n          <MessageOutlined key=\"comment\"></MessageOutlined>,\r\n          <Popover\r\n            key=\"more\"\r\n            content={[\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>Update</Button>\r\n                    <Button type=\"danger\">Delete</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>Update</Button>\r\n                )}\r\n              </Button.Group>,\r\n            ]}\r\n          >\r\n            <EllipsisOutlined></EllipsisOutlined>\r\n          </Popover>,\r\n        ]}\r\n      ></Card>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    User: Proptypes.object,\r\n    content: Proptypes.string,\r\n    Images: Proptypes.arrayOf(Proptypes.object),\r\n    Comments: Proptypes.arrayOf(Proptypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}