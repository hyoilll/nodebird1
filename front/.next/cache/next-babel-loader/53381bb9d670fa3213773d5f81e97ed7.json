{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\nodebrid1\\\\front\\\\components\\\\PostCard.js\";\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport Proptypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id;\n  // = const id = me?.id; => optional chaining operation\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  const {\n    0: conmmentFormOpened,\n    1: setCommentFormOpened\n  } = useState(false);\n  const onToggleLike = useCallback(e => {\n    // if (liked === true) {\n    //   setLiked(false);\n    // } else {\n    //   setLiked(true);\n    // }\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(e => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 34\n      }, this),\n      actions: [\n      /*#__PURE__*/\n      //actionはArrayだからKeyが必要になる\n      _jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: [/*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 19\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), conmmentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: post.Comments.map(c => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: c.User.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: c.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\nPostCard.propTypes = {\n  post: Proptypes.shape({\n    id: Proptypes.number,\n    User: Proptypes.object,\n    content: Proptypes.string,\n    Images: Proptypes.arrayOf(Proptypes.object),\n    Comments: Proptypes.arrayOf(Proptypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["Avatar","Button","Card","Popover","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","useSelector","Proptypes","PostImages","useCallback","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","post","me","state","user","id","liked","setLiked","conmmentFormOpened","setCommentFormOpened","onToggleLike","e","prev","onToggleComment","style","marginBottom","children","cover","Images","images","fileName","_jsxFileName","lineNumber","columnNumber","actions","twoToneColor","onClick","content","Group","User","type","Meta","avatar","nickname","title","description","Comments","map","c","propTypes","shape","number","object","string","arrayOf","isRequired"],"sources":["E:/web/nodebrid1/front/components/PostCard.js"],"sourcesContent":["import { Avatar, Button, Card, Popover } from \"antd\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  HeartTwoTone,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Proptypes from \"prop-types\";\r\nimport PostImages from \"./PostImages\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n  // = const id = me?.id; => optional chaining operation\r\n\r\n  const [liked, setLiked] = useState(false);\r\n  const [conmmentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onToggleLike = useCallback((e) => {\r\n    // if (liked === true) {\r\n    //   setLiked(false);\r\n    // } else {\r\n    //   setLiked(true);\r\n    // }\r\n    setLiked((prev) => !prev);\r\n  }, []);\r\n\r\n  const onToggleComment = useCallback((e) => {\r\n    setCommentFormOpened((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"20px\" }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images}></PostImages>}\r\n        actions={[\r\n          //actionはArrayだからKeyが必要になる\r\n          <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onToggleLike}\r\n            ></HeartTwoTone>\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike}></HeartOutlined>\r\n          ),\r\n          <MessageOutlined\r\n            key=\"comment\"\r\n            onClick={onToggleComment}\r\n          ></MessageOutlined>,\r\n          <Popover\r\n            key=\"more\"\r\n            content={[\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>Update</Button>\r\n                    <Button type=\"danger\">Delete</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>Report</Button>\r\n                )}\r\n              </Button.Group>,\r\n            ]}\r\n          >\r\n            <EllipsisOutlined></EllipsisOutlined>\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        ></Card.Meta>\r\n      </Card>\r\n      {conmmentFormOpened && (\r\n        <div>\r\n          {post.Comments.map((c) => {\r\n            return (\r\n              <>\r\n                <div>{c.User.nickname}</div>\r\n                <div>{c.content}</div>\r\n              </>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    User: Proptypes.object,\r\n    content: Proptypes.string,\r\n    Images: Proptypes.arrayOf(Proptypes.object),\r\n    Comments: Proptypes.arrayOf(Proptypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}