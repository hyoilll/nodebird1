{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\nodebrid1\\\\front\\\\components\\\\PostCard.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport Proptypes from \"prop-types\";\nimport PostImages from \"./PostImages\";\nimport { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var id = me && me.id;\n  // = const id = me?.id; => optional chaining operation\n\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    conmmentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleLike = useCallback(function (e) {\n    // if (liked === true) {\n    //   setLiked(false);\n    // } else {\n    //   setLiked(true);\n    // }\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, [liked]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 34\n      }, _this),\n      actions: [\n      /*#__PURE__*/\n      //actionはArrayだからKeyが必要になる\n      _jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: [/*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, _this)],\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n_s(PostCard, \"PE4cZOTPu9V3d+9oDcheqCRIX58=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: Proptypes.shape({\n    id: Proptypes.number,\n    User: Proptypes.object,\n    content: Proptypes.string,\n    Images: Proptypes.arrayOf(Proptypes.object),\n    Comments: Proptypes.arrayOf(Proptypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Avatar","Button","Card","Popover","EllipsisOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","RetweetOutlined","useSelector","Proptypes","PostImages","useCallback","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","_ref","_s","post","_useSelector","state","user","me","id","_useState","liked","setLiked","_useState2","conmmentFormOpened","setCommentFormOpened","onToggleLike","e","prev","style","marginBottom","children","cover","Images","images","fileName","_jsxFileName","lineNumber","columnNumber","_this","actions","twoToneColor","onClick","content","Group","User","type","Meta","avatar","nickname","title","description","_c","propTypes","shape","number","object","string","arrayOf","Comments","isRequired","$RefreshReg$"],"sources":["E:/web/nodebrid1/front/components/PostCard.js"],"sourcesContent":["import { Avatar, Button, Card, Popover } from \"antd\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  HeartTwoTone,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Proptypes from \"prop-types\";\r\nimport PostImages from \"./PostImages\";\r\nimport { useCallback, useState } from \"react\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n  // = const id = me?.id; => optional chaining operation\r\n\r\n  const [liked, setLiked] = useState(false);\r\n  const [conmmentFormOpened, setCommentFormOpened] = useState(false);\r\n\r\n  const onToggleLike = useCallback(\r\n    (e) => {\r\n      // if (liked === true) {\r\n      //   setLiked(false);\r\n      // } else {\r\n      //   setLiked(true);\r\n      // }\r\n      setLiked((prev) => !prev);\r\n    },\r\n    [liked]\r\n  );\r\n\r\n  return (\r\n    <div style={{ marginBottom: \"20px\" }}>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images}></PostImages>}\r\n        actions={[\r\n          //actionはArrayだからKeyが必要になる\r\n          <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n          liked ? (\r\n            <HeartTwoTone\r\n              twoToneColor=\"#eb2f96\"\r\n              key=\"heart\"\r\n              onClick={onToggleLike}\r\n            ></HeartTwoTone>\r\n          ) : (\r\n            <HeartOutlined key=\"heart\" onClick={onToggleLike}></HeartOutlined>\r\n          ),\r\n          <MessageOutlined key=\"comment\"></MessageOutlined>,\r\n          <Popover\r\n            key=\"more\"\r\n            content={[\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>Update</Button>\r\n                    <Button type=\"danger\">Delete</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>Report</Button>\r\n                )}\r\n              </Button.Group>,\r\n            ]}\r\n          >\r\n            <EllipsisOutlined></EllipsisOutlined>\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        ></Card.Meta>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    User: Proptypes.object,\r\n    content: Proptypes.string,\r\n    Images: Proptypes.arrayOf(Proptypes.object),\r\n    Comments: Proptypes.arrayOf(Proptypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}