{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\nodebrid1\\\\front\\\\components\\\\PostCard.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { Button, Card, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport Proptypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    me = _useSelector.me;\n  var id = me && me.id;\n  // = const id = me?.id; => optional chaining operation\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 34\n      }, _this),\n      actions: [\n      /*#__PURE__*/\n      //actionはArrayだからKeyが必要になる\n      _jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: [/*#__PURE__*/_jsxDEV(Button.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, _this)],\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n_s(PostCard, \"9V1uf3383/tS6kXOMMR8c8sBgP4=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: Proptypes.shape({\n    id: Proptypes.number,\n    User: Proptypes.object,\n    content: Proptypes.string,\n    Images: Proptypes.arrayOf(Proptypes.object),\n    Comments: Proptypes.arrayOf(Proptypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","useSelector","Proptypes","jsxDEV","_jsxDEV","Fragment","_Fragment","PostCard","_ref","_s","post","_useSelector","state","user","me","id","children","cover","Images","PostImages","images","fileName","_jsxFileName","lineNumber","columnNumber","_this","actions","content","Group","type","_c","propTypes","shape","number","User","object","string","arrayOf","Comments","isRequired","$RefreshReg$"],"sources":["E:/web/nodebrid1/front/components/PostCard.js"],"sourcesContent":["import { Button, Card, Popover } from \"antd\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Proptypes from \"prop-types\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id;\r\n  // = const id = me?.id; => optional chaining operation\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        cover={post.Images[0] && <PostImages images={post.Images}></PostImages>}\r\n        actions={[\r\n          //actionはArrayだからKeyが必要になる\r\n          <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n          <HeartOutlined key=\"heart\"></HeartOutlined>,\r\n          <MessageOutlined key=\"comment\"></MessageOutlined>,\r\n          <Popover\r\n            key=\"more\"\r\n            content={[\r\n              <Button.Group>\r\n                <Button>Update</Button>\r\n                <Button type=\"danger\">Delete</Button>\r\n                <Button>Update</Button>\r\n              </Button.Group>,\r\n            ]}\r\n          >\r\n            <EllipsisOutlined></EllipsisOutlined>\r\n          </Popover>,\r\n        ]}\r\n      ></Card>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: Proptypes.shape({\r\n    id: Proptypes.number,\r\n    User: Proptypes.object,\r\n    content: Proptypes.string,\r\n    Images: Proptypes.arrayOf(Proptypes.object),\r\n    Comments: Proptypes.arrayOf(Proptypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}