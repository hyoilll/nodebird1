{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\"; //関数を合わせる\n\nimport user from \"./user\";\nimport post from \"./post\";\nconst initialState = {\n  user: {},\n  post: {}\n};\n\n//action creator -> dynamic action creator\n// const changeNickname = (data) => {\n//   return {\n//     type: \"CHANGE_NICKNAME\",\n//     data,\n//   };\n// };\n\n// (prev state, action) => next state\nconst rootReducer = combineReducers({\n  // server side rendringのためindexを追加する\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        return _objectSpread(_objectSpread({}, state), action.payload);\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","initialState","rootReducer","index","state","action","type","_objectSpread","payload"],"sources":["E:/web/nodebrid1/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combineReducers } from \"redux\"; //関数を合わせる\r\n\r\nimport user from \"./user\";\r\nimport post from \"./post\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  post: {},\r\n};\r\n\r\n//action creator -> dynamic action creator\r\n// const changeNickname = (data) => {\r\n//   return {\r\n//     type: \"CHANGE_NICKNAME\",\r\n//     data,\r\n//   };\r\n// };\r\n\r\n// (prev state, action) => next state\r\nconst rootReducer = combineReducers({\r\n  // server side rendringのためindexを追加する\r\n  index: (state = {}, action) => {\r\n    switch (action.type) {\r\n      case HYDRATE:\r\n        return {\r\n          ...state,\r\n          ...action.payload,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  },\r\n  user,\r\n  post,\r\n});\r\n\r\nexport default rootReducer;\r\n"],"mappings":";;;;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,eAAe,QAAQ,OAAO,CAAC,CAAC;;AAEzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAEzB,MAAMC,YAAY,GAAG;EACnBF,IAAI,EAAE,CAAC,CAAC;EACRC,IAAI,EAAE,CAAC;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAME,WAAW,GAAGJ,eAAe,CAAC;EAClC;EACAK,KAAK,EAAEA,CAACC,KAAK,GAAG,CAAC,CAAC,EAAEC,MAAM,KAAK;IAC7B,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAKT,OAAO;QACV,OAAAU,aAAA,CAAAA,aAAA,KACKH,KAAK,GACLC,MAAM,CAACG,OAAO;MAErB;QACE,OAAOJ,KAAK;IAAC;EAEnB,CAAC;EACDL,IAAI;EACJC;AACF,CAAC,CAAC;AAEF,eAAeE,WAAW"},"metadata":{},"sourceType":"module"}