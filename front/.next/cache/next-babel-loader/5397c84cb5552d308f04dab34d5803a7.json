{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\nconst configureStore = () => {\n  // NODE_ENVがリリースモードではないとDevToolsを使うように\n  const enhancer = false ? compose(applyMiddleware([])) : composeWithDevTools(applyMiddleware([]));\n  // store : state + reducers\n  const store = createStore(reducer, enhancer);\n  return store;\n};\nconst wrapper = createWrapper(configureStore, {\n  dubug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","configureStore","enhancer","store","wrapper","dubug"],"sources":["E:/web/nodebrid1/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport reducer from \"../reducers\";\r\n\r\nconst configureStore = () => {\r\n  // NODE_ENVがリリースモードではないとDevToolsを使うように\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware([]))\r\n      : composeWithDevTools(applyMiddleware([]));\r\n  // store : state + reducers\r\n  const store = createStore(reducer, enhancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  dubug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,OAAOC,OAAO,MAAM,aAAa;AAEjC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B;EACA,MAAMC,QAAQ,GACZ,QACIL,OAAO,CAACD,eAAe,CAAC,EAAE,CAAC,CAAC,GAC5BG,mBAAmB,CAACH,eAAe,CAAC,EAAE,CAAC,CAAC;EAC9C;EACA,MAAMO,KAAK,GAAGL,WAAW,CAACE,OAAO,EAAEE,QAAQ,CAAC;EAC5C,OAAOC,KAAK;AACd,CAAC;AAED,MAAMC,OAAO,GAAGT,aAAa,CAACM,cAAc,EAAE;EAC5CI,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}